#!/bin/bash

function usage {
	echo "Usage: $0 [-c | --cat] [-d | --delete]"
	echo "       $0 [-h | --help]"
	echo "Flags:"
	echo "       -c | --cat     Cat file after editing (implies -e)"
	echo "       -d | --delete  Delete file after editing (implies -q)"
	echo "       -e | --stderr  Print file name to stderr instead of stdout"
	echo "       -q | --quiet   Do not print file name (overrides -e)"
	echo "       -h | --help    Display this help menu"
}

# Credit to: http://stackoverflow.com/a/14203146/836390
# Use -gt 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use -gt 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to -gt 0 the /etc/hosts part is not recognized ( may be a bug )
while [[ $# -gt 0 ]]; do
	OPT="$1"
	case "$OPT" in
		-c|--cat)
		FLAG_CAT="yes"
		FLAG_STDERR="yes"
		shift # past argument
		;;
		-d|--delete)
		FLAG_DELETE="yes"
		FLAG_QUIET="yes"
		shift # past argument
		;;
		-e|--stderr)
		FLAG_STDERR="yes"
		shift # past argument
		;;
		-q|--quiet)
		FLAG_QUIET="yes"
		shift # past argument
		;;
		-h|--help)
		usage >&2
		exit 0
		;;
		*) # unknown option
		echo "Unknown option: ${OPT}" >&2
		usage >&2
		exit 1
		;;
	esac
done

F=$(mktemp)
# see http://stackoverflow.com/a/13864829/836390
if [ -z ${EDITOR+set} ]; then
	# $EDITOR is unset
	nano "$F"
else
	# $EDITOR is set
	"$EDITOR" "$F"
fi

if ! [ -z ${FLAG_CAT+set} ]; then
	# $FLAG_CAT is set (note the !)
	cat "$F"
fi

if [ -z ${FLAG_QUIET+set} ]; then
	# $FLAG_QUIET is unset
	if [ -z ${FLAG_STDERR+set} ]; then
		# $FLAG_STDERR is unset
		echo "$F"
	else
		echo "$F" >&2
	fi
fi

if ! [ -z ${FLAG_DELETE+set} ]; then
	# $FLAG_DELETE is set (note the !)
	rm "$F"
fi
